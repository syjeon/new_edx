// Generated by CoffeeScript 1.6.3
(function() {
  var StudentNotes,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  StudentNotes = (function() {
    StudentNotes.prototype._debug = false;

    StudentNotes.prototype.targets = [];

    function StudentNotes($, el) {
      this.onInitNotes = __bind(this.onInitNotes, this);
      var events;
      if (this._debug) {
        console.log('student notes init', arguments, this);
      }
      if (!$(el).data('notes-instance')) {
        events = {
          'notes:init': this.onInitNotes
        };
        $(el).delegate('*', events);
        $(el).data('notes-instance', this);
      }
    }

    StudentNotes.prototype.onInitNotes = function(event, uri) {
      var annotator, found, store, storeConfig;
      if (uri == null) {
        uri = null;
      }
      event.stopPropagation();
      storeConfig = this.getStoreConfig(uri);
      found = this.targets.some(function(target) {
        return target === event.target;
      });
      if (found) {
        annotator = $(event.target).data('annotator');
        if (annotator) {
          store = annotator.plugins['Store'];
          $.extend(store.options, storeConfig);
          if (uri) {
            return store.loadAnnotationsFromSearch(storeConfig['loadFromSearch']);
          } else {
            return console.log('URI is required to load annotations');
          }
        } else {
          return console.log('No annotator() instance found for target: ', event.target);
        }
      } else {
        $(event.target).annotator().annotator('addPlugin', 'Tags').annotator('addPlugin', 'Store', storeConfig);
        return this.targets.push(event.target);
      }
    };

    StudentNotes.prototype.getStoreConfig = function(uri) {
      var prefix, storeConfig;
      prefix = this.getPrefix();
      if (uri === null) {
        uri = this.getURIPath();
      }
      storeConfig = {
        prefix: prefix,
        loadFromSearch: {
          uri: uri,
          limit: 0
        },
        annotationData: {
          uri: uri
        }
      };
      return storeConfig;
    };

    StudentNotes.prototype.getPrefix = function() {
      var match, prefix, re;
      re = /^(\/courses\/[^/]+\/[^/]+\/[^/]+)/;
      match = re.exec(this.getURIPath());
      prefix = (match ? match[1] : '');
      return "" + prefix + "/notes/api";
    };

    StudentNotes.prototype.getURIPath = function() {
      return window.location.href.toString().split(window.location.host)[1];
    };

    return StudentNotes;

  })();

  $(document).ready(function($) {
    return new StudentNotes($, this);
  });

}).call(this);
